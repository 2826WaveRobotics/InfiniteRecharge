// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.

#pragma once

#include "frc/commands/Subsystem.h"

#include "ctre/Phoenix.h"
#include "rev/ColorSensorV3.h"
#include "rev/ColorMatch.h"


/**
 *
 *
 * @author ExampleAuthor
 */
class ColorWheel: public frc::Subsystem {
	private:
	// It's desirable that everything possible is private except
	// for methods that implement subsystem capabilities
	std::shared_ptr<ctre::phoenix::motorcontrol::can::WPI_TalonSRX> colorMotor;

  static constexpr auto i2cPort = frc::I2C::Port::kOnboard;
  /**
   * A Rev Color Sensor V3 object is constructed with an I2C port as a 
   * parameter. The device will be automatically initialized with default 
   * parameters.
   */
  rev::ColorSensorV3 m_colorSensor{i2cPort};
  /**
   * A Rev Color Match object is used to register and detect known colors. This can 
   * be calibrated ahead of time or during operation.
   * 
   * This object uses a simple euclidian distance to estimate the closest match
   * with given confidence range.
   */
  rev::ColorMatch m_colorMatcher;

  //Color values are R,G,B valid ranges are 0.0 - 1.0.  Need to take RGB value and divide by 255 (RGB is in 0 - 255)
  const frc::Color kBlueTarget = frc::Color(0.0, 1.0, 1.0);   //CMYK = 100, 0, 0, 0
  const frc::Color kGreenTarget = frc::Color(0.0, 1.0, 0.0);  //CMYK = 100, 0, 100, 0
  const frc::Color kRedTarget = frc::Color(1.0, 0.0, 0.0);    //CMYK = 0, 100, 100, 0
  const frc::Color kYellowTarget = frc::Color(1.0, 1.0, 0.0); //CMYK = 0, 0, 100, 0

	
	public:
	ColorWheel();
	//void InitDefaultCommand() override;
	//void Periodic() override;
  void printClosestColor();

};

